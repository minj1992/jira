# Code Generated by Sidekick is for learning and experimentation purposes only. 

# Define variables
$servers = @(
    @{ Server = "app2528l002.com"; Username = "app2528l002.comm"; Password = "app2528l002.com" },
    @{ Server = "app2528l002.com"; Username = "app2528l002.comapp2528l002.comcom"; Password = "app2528l002.com" }
    # Add more servers as needed
)
$jiraService = "jira"

# Function to run a command via SSH
function Run-SSHCommand($server, $username, $password, $command) {
    try {
        $sshSession = New-SSHSession -ComputerName $server -Credential (New-Object PSCredential($username, (ConvertTo-SecureString $password -AsPlainText -Force)))
        Write-Output "SSH session secured successfully for $server."
        $result = Invoke-SSHCommand -SessionId $sshSession.SessionId -Command $command
        Remove-SSHSession -SessionId $sshSession.SessionId
        return $result.Output
    } catch {
        Write-Error "Error occurred while executing command on $server : $_"
        exit 1
    }
}

# Function to check Jira status
function Check-JiraStatus($server, $username, $password) {
    $statusCommand = "sudo systemctl is-active $jiraService"
    return Run-SSHCommand $server $username $password $statusCommand
}

# Start Jira service on multiple servers
foreach ($serverInfo in $servers) {
    $server = $serverInfo.Server
    $username = $serverInfo.Username
    $password = $serverInfo.Password

    Run-SSHCommand $server $username $password "sudo systemctl start $jiraService"

    # Check Jira status 3-4 times with 5 seconds interval
    for ($i = 1; $i -le 4; $i++) {
        $status = Check-JiraStatus $server $username $password
        if ($status -eq "active") {
            Write-Output "Jira has been successfully started on $server."
            break
        } elseif ($status -eq "failed") {
            Write-Output "Jira is not running on $server. Attempt $i of 4."
        } else {
            Write-Output "Unexpected status on $server : $status. Please check Jira manually."
            exit 1
        }
        Start-Sleep -Seconds 30
    }

    # If Jira still cannot be started
    #if ($status -ne "active") {
     #   Write-Output "Could not start Jira on $server after multiple attempts. Please check manually."
        #exit 1
    }
#}

Write-Output "Jira has been successfully started on all servers."
exit 0
